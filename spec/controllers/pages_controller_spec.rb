require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

describe PagesController, :type => :controller do

	describe "Receving request from Pivotal Tracker" do 

		let(:json_params) {{
 "occurred_at" => 1382568826000,
 "highlight" => "accepted",
 "primary_resources" => [
  {
   "story_type" => "feature",
   "name" => "Reactor leak reported in Detention Block AA-23",
   "url" => "http:///story/show/563",
   "id" => 563,
   "kind" => "story"
  }
 ],
 "changes" => [
  {
   "story_type" => "feature",
   "name" => "Reactor leak reported in Detention Block AA-23",
   "new_values" => {
    "accepted_at" => 1382568827000,
    "before_id" => 6024,
    "after_id" => 559,
    "current_state" => "accepted",
    "updated_at" => 1382568826000
   },
   "original_values" => {
    "accepted_at" => nil,
    "before_id" => 6643,
    "after_id" => 565,
    "current_state" => "delivered",
    "updated_at" => 1382568825000
   },
   "id" => 563,
   "change_type" => "update",
   "kind" => "story"
  }
 ],
 "message" => "Darth Vader accepted this feature",
 "project_version" => 1037,
 "performed_by" => {
  "name" => "Darth Vader",
  "initials" => "DV",
  "id" => 101,
  "kind" => "person"
 },
 "guid" => "99_1037",
 "project" => {
  "name" => "Death Star",
  "id" => 99,
  "kind" => "project"
 },
 "kind" => "story_update_activity"		
}}

		it "finds its data from the request" do 
			post :accept_request, json_params, format: :json
			puts assigns[:kind]
			puts assigns(:highlight)
			puts assigns(:project_name)
			puts assigns(:story_name)
			puts assigns(:pt_user_id)
			puts assigns(:pt_user_name)
		end	

	end

end
